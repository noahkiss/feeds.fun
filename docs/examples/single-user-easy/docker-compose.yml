services:
  backend-api:
    image: ghcr.io/noahkiss/ffun/ffun-backend:latest
    command:
      - /bin/bash
      - -c
      - |
        ffun migrate
        echo "migrations successed"
        uvicorn ffun.application.application:app --host 0.0.0.0 --port 8000 --workers 1
    volumes:
      - /mnt/cache/appdata/ffun/backend/tag_processors.toml:/ffun/tag_processors.toml # tag processors config
    ports:
      - "3387:8000"
    network_mode: "bridge"
    environment:
      FFUN_ENABLE_API: "True"
      FFUN_LIBRARIAN_TAG_PROCESSORS_CONFIG: /ffun/tag_processors.toml
      FFUN_USER_SETTINGS_SECRET_KEY: d3bRi7KXaDT5kgL2wSqqZFXCOHzRWnNoTWmsn3Xtqjc= # https://fernetkeygen.com/
      FFUN_POSTGRESQL__HOST: localhost:5432
      FFUN_POSTGRESQL__USER: ffun
      FFUN_POSTGRESQL__PASSWORD: ffun
      FFUN_POSTGRESQL__DATABASE: ffun
      FFUN_ENVIRONMENT: prod
      FFUN_ORIGINS: '["http://localhost:3386"]' # Frontend accessible on host port 3386

  backend-workers:
    image: ghcr.io/noahkiss/ffun/ffun-backend:latest
    command:
      - /bin/bash
      - -c
      - |
        ffun migrate
        echo "migrations successed"
        ffun workers --loader --librarian
    volumes:
      - /mnt/cache/appdata/ffun/backend:/ffun # add tag processors config to dir
    network_mode: "bridge"
    environment:
      FFUN_LIBRARIAN_TAG_PROCESSORS_CONFIG: /ffun/tag_processors.toml
      FFUN_USER_SETTINGS_SECRET_KEY: d3bRi7KXaDT5kgL2wSqqZFXCOHzRWnNoTWmsn3Xtqjc= # https://fernetkeygen.com/
      FFUN_POSTGRESQL__HOST: localhost:5432
      FFUN_POSTGRESQL__USER: ffun
      FFUN_POSTGRESQL__PASSWORD: ffun
      FFUN_POSTGRESQL__DATABASE: ffun
      FFUN_ENVIRONMENT: prod
      FFUN_ORIGINS: '["http://localhost:3386"]'
      # Use proxy to scrape sites. Keep {"name":"default"} as first to try to bypass proxy then fallback
      # FFUN_LOADER_PROXIES='[{"name":"default"},{"name":"proxy name","url":"https://some-proxy-url"}]'

  frontend:
    image: ghcr.io/noahkiss/ffun/ffun-frontend-easy:latest
    ports:
      - "3386:80" # Exposes Nginx on host port 3386
    network_mode: "bridge"
    environment:
      BACKEND_API_URL: "http://localhost:3387"
    depends_on:
      - backend-api
